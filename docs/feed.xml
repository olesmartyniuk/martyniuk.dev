

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://0.0.0.0:4000/</id>
  <title>Martyniuk Oleksandr</title>
  <subtitle>Персональний блог Олександра Мартинюка українською мовою Oleksandr Martyniuk personal blog .NET C# Web Development Software Programming Algorithms Ukrainian</subtitle>
  <updated>2022-04-08T06:47:41+03:00</updated>
  <author>
    <name>Oleksandr Martyniuk</name>
    <uri>http://0.0.0.0:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://0.0.0.0:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://0.0.0.0:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator>
  <rights> © 2022 Oleksandr Martyniuk </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>7 issues in autotests from my experience</title>
    <link href="http://0.0.0.0:4000/posts/auto-tests-issues/" rel="alternate" type="text/html" title="7 issues in autotests from my experience" />
    <published>2021-02-27T14:00:00+02:00</published>
  
    <updated>2021-02-27T14:00:00+02:00</updated>
  
    <id>http://0.0.0.0:4000/posts/auto-tests-issues/</id>
    <content src="http://0.0.0.0:4000/posts/auto-tests-issues/" />
    <author>
      <name>Oleksandr Martyniuk</name>
    </author>

  
    
    <category term="Programming" />
    
    <category term="Code quality" />
    
  

  
    <summary>
      





      

In my practice I’ve seen projects with different approaches to testing: some were 99% covered by unit tests, while others had no tests at all. In this article, I want to highlight the typical problems with automated tests I faced during my career and how to solve them.

Every good software engineer cares about the quality of his code, so writing tests is a part of our job. We will talk about ...
    </summary>
  

  </entry>

  
  <entry>
    <title>Transactions in DynamoDB</title>
    <link href="http://0.0.0.0:4000/posts/transactions-dynamodb/" rel="alternate" type="text/html" title="Transactions in DynamoDB" />
    <published>2020-09-29T00:00:00+03:00</published>
  
    <updated>2021-03-18T23:04:35+02:00</updated>
  
    <id>http://0.0.0.0:4000/posts/transactions-dynamodb/</id>
    <content src="http://0.0.0.0:4000/posts/transactions-dynamodb/" />
    <author>
      <name>Oleksandr Martyniuk</name>
    </author>

  
    
    <category term="Programming" />
    
    <category term=".NET" />
    
  

  
    <summary>
      





      NoSQL vs. SQL

For many years, relational databases dominated software development. SQL has become one of the most popular programming languages. But at the beginning of the 21st century, the WEB 2.0 and the needs of big companies such as Google and Facebook made a revolution in data storage.

Strict coherence and internal data aggregation have become less important than high availability, perf...
    </summary>
  

  </entry>

  
  <entry>
    <title>Gready algorithms</title>
    <link href="http://0.0.0.0:4000/posts/greedy-algorithms/" rel="alternate" type="text/html" title="Gready algorithms" />
    <published>2020-05-08T18:30:00+03:00</published>
  
    <updated>2020-05-08T18:30:00+03:00</updated>
  
    <id>http://0.0.0.0:4000/posts/greedy-algorithms/</id>
    <content src="http://0.0.0.0:4000/posts/greedy-algorithms/" />
    <author>
      <name>Oleksandr Martyniuk</name>
    </author>

  
    
    <category term="Programming" />
    
    <category term="Algorithms" />
    
  

  
    <summary>
      





      

Greedy algorithm is an intuitive and efficient way to solve optimization problems. And although its implementation attracts with its obviousness, it is not always optimal. You need to understand precisely when to use a greedy approach and when to avoid it. In the article I suggest to look into greedy algorithms and try to apply it to problems from the codility.com site.

Greedy approach

Gree...
    </summary>
  

  </entry>

  
  <entry>
    <title>LINQ. Overview</title>
    <link href="http://0.0.0.0:4000/posts/linq-overview/" rel="alternate" type="text/html" title="LINQ. Overview" />
    <published>2020-05-01T18:35:30+03:00</published>
  
    <updated>2021-02-18T23:43:15+02:00</updated>
  
    <id>http://0.0.0.0:4000/posts/linq-overview/</id>
    <content src="http://0.0.0.0:4000/posts/linq-overview/" />
    <author>
      <name>Oleksandr Martyniuk</name>
    </author>

  
    
    <category term="Programming" />
    
    <category term=".NET" />
    
  

  
    <summary>
      





      

In this article, we will look into LINQ as an important component of the .NET framework, its history, and its role. Why it was created and how to use this tool in practice. Finally, we will look at examples in C# that give an idea of ​​what LINQ is.

LINQ - (language integrated query) - a query data language, which is integrated into C#. The data can be collections of objects in memory, XML f...
    </summary>
  

  </entry>

</feed>


