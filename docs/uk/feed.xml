

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://0.0.0.0:4000/</id>
  <title>Мартинюк Олександр</title>
  <subtitle>Персональний блог Олександра Мартинюка українською мовою Oleksandr Martyniuk personal blog .NET C# Web Development Software Programming Algorithms Ukrainian</subtitle>
  <updated>2022-04-08T06:48:02+03:00</updated>
  <author>
    <name>Oleksandr Martyniuk</name>
    <uri>http://0.0.0.0:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://0.0.0.0:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="uk"
    href="http://0.0.0.0:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator>
  <rights> © 2022 Oleksandr Martyniuk </rights>
  <icon>/uk/assets/img/favicons/favicon.ico</icon>
  <logo>/uk/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>7 проблем в автотестах</title>
    <link href="http://0.0.0.0:4000/posts/auto-tests-issues/" rel="alternate" type="text/html" title="7 проблем в автотестах" />
    <published>2021-02-27T14:00:00+02:00</published>
  
    <updated>2021-03-01T14:52:27+02:00</updated>
  
    <id>http://0.0.0.0:4000/posts/auto-tests-issues/</id>
    <content src="http://0.0.0.0:4000/posts/auto-tests-issues/" />
    <author>
      <name>Oleksandr Martyniuk</name>
    </author>

  
    
    <category term="Програмування" />
    
    <category term="якість коду" />
    
  

  
    <summary>
      





      

В своїй практиці я зустрічав проєкти з різними підходами до тестування: деякі мали 99% покриттям юніт-тестами, а в інших автоматичне тестування було відсутнє взагалі. В цій статті я хочу звернути увагу на характерні проблеми з автоматичними тестами, що мені зустрічались, і як їх вирішити.

Кожен хороший програміст переймається якістю власного коду, тому писати тести - це частина нашої роботи....
    </summary>
  

  </entry>

  
  <entry>
    <title>Транзакції в DynamoDB</title>
    <link href="http://0.0.0.0:4000/posts/transactions-dynamodb/" rel="alternate" type="text/html" title="Транзакції в DynamoDB" />
    <published>2020-09-29T00:00:00+03:00</published>
  
    <updated>2020-09-29T00:00:00+03:00</updated>
  
    <id>http://0.0.0.0:4000/posts/transactions-dynamodb/</id>
    <content src="http://0.0.0.0:4000/posts/transactions-dynamodb/" />
    <author>
      <name>Oleksandr Martyniuk</name>
    </author>

  
    
    <category term="Програмування" />
    
    <category term=".NET" />
    
  

  
    <summary>
      





      NoSQL проти SQL

Протягом багатьох років в розробці програмного забезпечення домінували реляційні бази даних. Мова SQL стала однією з найпоширеніших мов програмування. Але на початку 21 століття розвиток WEB 2.0 і потреби таких компаній як Google і Facebook спричинили революцію в збереженні даних.

Сувора узгодженість і внутрішнє об’єднання даних стали менш важливими за високу доступність, швид...
    </summary>
  

  </entry>

  
  <entry>
    <title>Безкоштовна БД для програми ASP.NET Core</title>
    <link href="http://0.0.0.0:4000/uk/posts/%D0%B1%D0%B5%D0%B7%D0%BA%D0%BE%D1%88%D1%82%D0%BE%D0%B2%D0%BD%D0%B0-%D0%B1%D0%B4-%D0%B4%D0%BB%D1%8F-%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%B8-aspnet-core/" rel="alternate" type="text/html" title="Безкоштовна БД для програми ASP.NET Core" />
    <published>2020-07-28T11:00:00+03:00</published>
  
    <updated>2021-04-29T23:10:49+03:00</updated>
  
    <id>http://0.0.0.0:4000/uk/posts/%D0%B1%D0%B5%D0%B7%D0%BA%D0%BE%D1%88%D1%82%D0%BE%D0%B2%D0%BD%D0%B0-%D0%B1%D0%B4-%D0%B4%D0%BB%D1%8F-%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%B8-aspnet-core/</id>
    <content src="http://0.0.0.0:4000/uk/posts/%D0%B1%D0%B5%D0%B7%D0%BA%D0%BE%D1%88%D1%82%D0%BE%D0%B2%D0%BD%D0%B0-%D0%B1%D0%B4-%D0%B4%D0%BB%D1%8F-%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%B8-aspnet-core/" />
    <author>
      <name>Oleksandr Martyniuk</name>
    </author>

  
    
    <category term="Програмування" />
    
    <category term=".NET" />
    
  

  
    <summary>
      





      

В цій статті я розкажу про додатки Heroku, ми створимо базу даних PostgreSQL і налаштуємо її для підтримки процесу аутентифікації у веб-програмі ASP.NET Core. Це друга стаття циклу, тому варто ознайомитись з попередньою, в якій проєкт було створено і розгорнуто. Створена база даних не буде вимагати жодних фінансових витрат і гарно підходить для власного невеликого проєкту.

Передумови

Для ус...
    </summary>
  

  </entry>

  
  <entry>
    <title>Зустрічайте C# 9.0</title>
    <link href="http://0.0.0.0:4000/uk/posts/%D0%B7%D1%83%D1%81%D1%82%D1%80%D1%96%D1%87%D0%B0%D0%B9%D1%82%D0%B5-csharp-9/" rel="alternate" type="text/html" title="Зустрічайте C# 9.0" />
    <published>2020-06-11T13:00:00+03:00</published>
  
    <updated>2021-04-29T23:10:49+03:00</updated>
  
    <id>http://0.0.0.0:4000/uk/posts/%D0%B7%D1%83%D1%81%D1%82%D1%80%D1%96%D1%87%D0%B0%D0%B9%D1%82%D0%B5-csharp-9/</id>
    <content src="http://0.0.0.0:4000/uk/posts/%D0%B7%D1%83%D1%81%D1%82%D1%80%D1%96%D1%87%D0%B0%D0%B9%D1%82%D0%B5-csharp-9/" />
    <author>
      <name>Oleksandr Martyniuk</name>
    </author>

  
    
    <category term="Програмування" />
    
    <category term=".NET" />
    
  

  
    <summary>
      





      Це переклад статті “Welcome to C# 9.0” Медса Тоерсена - працівника Microsoft і головного дизайнера мови C#.




C# 9.0 набуває форм і я хочу поділитись нашим баченням найбільш важливих можливостей, які ми додаємо в наступну версію мови.

З кожною новою версією ми прагнемо зробити мову більш ясною і простою для загальних сценаріїв використання і C# 9.0 не є винятком. Цього разу нашим фокусом є з...
    </summary>
  

  </entry>

  
  <entry>
    <title>Обмеження одночасних потоків в C#</title>
    <link href="http://0.0.0.0:4000/uk/posts/%D0%BE%D0%B1%D0%BC%D0%B5%D0%B6%D0%B5%D0%BD%D0%BD%D1%8F-%D0%BE%D0%B4%D0%BD%D0%BE%D1%87%D0%B0%D1%81%D0%BD%D0%B8%D1%85-%D0%BF%D0%BE%D1%82%D0%BE%D0%BA%D1%96%D0%B2-csharp/" rel="alternate" type="text/html" title="Обмеження одночасних потоків в C#" />
    <published>2020-05-28T20:00:00+03:00</published>
  
    <updated>2021-04-29T23:10:49+03:00</updated>
  
    <id>http://0.0.0.0:4000/uk/posts/%D0%BE%D0%B1%D0%BC%D0%B5%D0%B6%D0%B5%D0%BD%D0%BD%D1%8F-%D0%BE%D0%B4%D0%BD%D0%BE%D1%87%D0%B0%D1%81%D0%BD%D0%B8%D1%85-%D0%BF%D0%BE%D1%82%D0%BE%D0%BA%D1%96%D0%B2-csharp/</id>
    <content src="http://0.0.0.0:4000/uk/posts/%D0%BE%D0%B1%D0%BC%D0%B5%D0%B6%D0%B5%D0%BD%D0%BD%D1%8F-%D0%BE%D0%B4%D0%BD%D0%BE%D1%87%D0%B0%D1%81%D0%BD%D0%B8%D1%85-%D0%BF%D0%BE%D1%82%D0%BE%D0%BA%D1%96%D0%B2-csharp/" />
    <author>
      <name>Oleksandr Martyniuk</name>
    </author>

  
    
    <category term="Програмування" />
    
    <category term=".NET" />
    
  

  
    <summary>
      





      


  Це переклад допису Constraining Concurrent Threads in C# Марка Хіта - Microsoft MVP, Software Architect в NICE Systems і автора кількох бібліотек з відкритим кодом.


Припустимо, в C# ми маємо виконати певну кількість задач, які наразі виконуються послідовно і які ми хочемо прискорити, запустивши їх паралельно. Для прикладу, уявіть, що ми завантажуємо купу веб сторінок:

var urls = new [] ...
    </summary>
  

  </entry>

</feed>


